version: "3.9"

services:
  n8n:
    build:
      context: .
      dockerfile: Dockerfile.n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    env_file:
      - .env
    environment:
      # ---------- TIMEZONE ----------
      - TZ=America/Lima

      # ---------- NODE_FUNCTION_ALLOW_EXTERNAL ----------
      - NODE_FUNCTION_ALLOW_EXTERNAL=@xmldom/xmldom

      # ---------- DATABASE (pick ONE block) ----------
      # 1. Keep default SQLite (good for quick local dev)
      # - DB_TYPE=sqlite
      # - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      # - DB_SQLITE_VACUUM_ON_STARTUP=true

      # 2. OR migrate later to Postgres (uncomment lines below)
      # - DB_TYPE=postgresdb
      # - DB_POSTGRESDB_HOST=db
      # - DB_POSTGRESDB_PORT=5432
      # - DB_POSTGRESDB_DATABASE=n8n
      # - DB_POSTGRESDB_USER=n8n
      # - DB_POSTGRESDB_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - n8n_data:/home/node/.n8n
    # depends_on:
      # - db           # becomes a no-op if you stay on SQLite

  # Optional Postgres service (comment out if staying on SQLite)
  # db:
  #   image: postgres:15
  #   container_name: n8n_db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=n8n
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
  #     - POSTGRES_DB=n8n
  #     - PGDATA=/var/lib/postgresql/data/pgdata   # keeps init scripts clean
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U n8n"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  n8n_data:
    external: true
    name: n8n_data
  # postgres_data:

